{"version":3,"sources":["App.js","vendor/index.js","index.js"],"names":["App","useState","logger","updateLogger","logOnScreen","newLog","prevLog","length","slice","useEffect","scriptjs","window","msf","search","err","services","className","map","log","index","ReactDOM","render","document","getElementById"],"mappings":"oQA0CeA,MAnCf,WAAgB,IAAD,EACkBC,mBAAS,IAD3B,mBACNC,EADM,KACEC,EADF,KAGPC,EAAc,SAACC,GACnBF,GAAa,SAACG,GACZ,OAAIA,EAAQC,QAPI,GAQR,GAAN,mBAAWD,EAAQE,MAAM,EARX,KAQd,CAA4CH,IAGxC,GAAN,mBAAWC,GAAX,CAAoBD,QAgBxB,OAZAI,qBAAU,WACRC,ICpB4B,4/0BDoBD,WACzBN,EAAY,qCAEZO,OAAOC,IAAIC,QAAO,SAACC,EAAKC,GACtBX,EAAY,yBACRU,GAAKV,EAAY,8BAAD,OAA+BU,IACnDV,EAAY,aAAD,OAAcW,EAASR,iBAGrC,IAGD,sBAAKS,UAAU,MAAf,UACE,2CACCd,EAAOe,KAAI,SAACC,EAAKC,GAAN,OACV,4BAAgBD,GAARC,UE/BhBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c2f70ff4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport scriptjs from 'scriptjs';\nimport { MSF_2_3_4_MIN_JS } from './vendor';\n\nconst LOGGER_LENGTH = 20;\n\nfunction App() {\n  const [logger, updateLogger] = useState([]);\n\n  const logOnScreen = (newLog) => {\n    updateLogger((prevLog) => {\n      if (prevLog.length >= LOGGER_LENGTH) {\n        return [...prevLog.slice(1, LOGGER_LENGTH), newLog];\n      }\n\n      return [...prevLog, newLog];\n    });\n  };\n\n  useEffect(() => {\n    scriptjs(MSF_2_3_4_MIN_JS, () => {\n      logOnScreen(\"Carregou script do SmartView SDK!\");\n\n      window.msf.search((err, services) => {\n        logOnScreen(\"Entrou no msf.search!\");\n        if (err) logOnScreen(`Erro ao conectar ao canal: ${err}`);\n        logOnScreen(`Services: ${services.length}`);\n      });\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <h1>Poc Wifi!</h1>\n      {logger.map((log, index) => (\n        <p key={index}>{log}</p>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","export const CONNECT_BRIDGE_MIN_JS = 'data:text/javascript;base64,'\nexport const MSF_2_3_4_MIN_JS = 'data:text/javascript;base64,'\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}